@prefix ex: <http://example.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# TODO: Should we target any IRI? Not easily apparent if that would work.

# PERF total ~66% reduction in time if all here deactivated (ref: ePO-core)

# PERF ~13% reduction in time if deactivated (ref: ePO-core)
ex:OnlyClassSubsumptionShape
  a sh:NodeShape ;
  sh:targetClass owl:Class ;
  sh:deactivated false ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Violation of SEMIC rule SC-R2: Only subsumption OWL class relations shall be used" ;
    sh:select """
      SELECT $this (?p AS ?path) ?value
      WHERE {
        $this ?p ?value .
        FILTER(?p not in (rdf:type, rdfs:isDefinedBy, rdfs:subClassOf))
        FILTER(isIRI(?value))
      }
      """ ;
  ]
.

# NOTE: for some reason rdf:Property (inference) or advanced SPARQL target (to
# capture both types of properties) does not work

# PERF ~33% reduction in time if deactivated (ref: ePO-core)
ex:OnlyObjPropSubsumptionShape
  a sh:NodeShape ;
  sh:targetClass owl:ObjectProperty ;
  sh:deactivated false ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Violation of SEMIC rule SC-R2: Only subsumption OWL property relations shall be used" ;
    sh:select """
      SELECT $this (?p AS ?path) ?value
      WHERE {
        $this ?p ?value .
        FILTER(?p not in (rdf:type, rdfs:isDefinedBy, rdfs:subPropertyOf))
        FILTER(isIRI(?value))
      }
      """ ;
  ]
.

# PERF ~20% reduction in time if deactivated (ref: ePO-core)
ex:OnlyDataPropSubsumptionShape
  a sh:NodeShape ;
  sh:targetClass owl:DatatypeProperty ;
  sh:deactivated false ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Violation of SEMIC rule SC-R2: Only subsumption OWL property relations shall be used" ;
    sh:select """
      SELECT $this (?p AS ?path) ?value
      WHERE {
        $this ?p ?value .
        FILTER(?p not in (rdf:type, rdfs:isDefinedBy, rdfs:subPropertyOf))
        FILTER(isIRI(?value))
      }
      """ ;
  ]
.
